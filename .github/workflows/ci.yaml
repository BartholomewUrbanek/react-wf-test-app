name: CI
on:
  pull_request:
    branches: [develop,main]
  push:
    branches: [develop,main]
    

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      SURGE_LOGIN: ${{secrets.SURGE_LOGIN}}
      SURGE_TOKEN: ${{secrets.SURGE_TOKEN}}
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: >
            ~/.npm
          key: ${{runner.os}}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{runner.os}}-node-
      - run: npm ci 
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      - name: Build project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload build folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      - name: ZIP assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run:
          zip -r build.zip ./build
      - name: Create a release 
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.CUSTOM_TOKEN}}
      - name: Deploy to staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain magical-karate-kick.surge.sh
      - name: Deploy to prod
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx surge --project ./build --domain tango-dancing-mango.surge.sh
      - name: Fail job test
        run: exit 1
  slack-message:
      runs-on: ubuntu-latest
      needs: build
      if: ${{ failure() }}
      steps:
      - name: Post to slack 
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'C05JT01HQCR'
          slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{secrets.SLACK_BOT_TOKEN}}
 


